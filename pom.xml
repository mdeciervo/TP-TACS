<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>

	<groupId>ar.edu.utn.frba.tacs.2015.1c.g1</groupId>
	<artifactId>tp</artifactId>

	<properties>
		<appengine.app.version>1</appengine.app.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>1.9.10</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>1.9.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>1.9.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-tools-sdk</artifactId>
			<version>1.9.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>5.1.5</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.19</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>2.19</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.19</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>2.19</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>2.5.4</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>2.19</version>
		</dependency>

		<!--PARA LOS TESTS -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.0.6.RELEASE</version>
			<scope>test</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>
				org.glassfish.jersey.test-framework.providers
			</groupId>
			<artifactId>
				jersey-test-framework-provider-simple
			</artifactId>
			<version>2.19</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<!-- for hot reload of the web application -->
		<outputDirectory>
            ${project.build.directory}/${project.build.finalName}/WEB-INF/classes
        </outputDirectory>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.1</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>display-dependency-updates</goal>
								<goal>display-plugin-updates</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<version>3.1</version>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archiveClasses>true</archiveClasses>
						<webResources>
							<!-- in order to interpolate version from pom into appengine-web.xml -->
							<resource>
								<directory>${basedir}/src/main/webapp/WEB-INF</directory>
								<filtering>true</filtering>
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.google.appengine</groupId>
					<artifactId>appengine-maven-plugin</artifactId>
					<version>1.9.19</version>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>1.9.19</version>
			</plugin>
			<!--</plugins> -->

			<!--################################# JACOCO ######################################## -->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.0.201403182114</version>
				<executions>
					<execution>
						<!-- Genera todas las propiedades necesarias para registrar el agente 
							en la máquina virtual que se levanta al ejecutar los test unitarios -->
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<excludes>
								<!-- <exclude>**/*ITest.java</exclude> <exclude>**/When*.java</exclude> -->
								<exclude>**/*Test.java</exclude>
							</excludes>
							<propertyName>jacoco.argLine</propertyName>
						</configuration>

					</execution>
					<!-- Este punto de ejecución es opcional. Si se especifica, JaCoCo generará 
						un informe en HTML de la cobertura de cada módulo de maven en el directorio 
						target/site/jacoco. -->
					<execution>
						<id>report</id>
						<configuration>
							<dataFile>
								${project.build.directory}/jacoco.exec
							</dataFile>
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco
							</outputDirectory>
							<exclude>**/*Test.java</exclude>
						</configuration>
					</execution>
					<!-- Este punto de ejecución tiene la misma función que el primero que 
						hemos visto (prepare-agent) salvo porque este se encargará de registrar la 
						cobertura de los test integrados. -->
					<execution>
						<id>prepare-agent-it</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>
								${project.build.directory}/jacoco-integration.exec
							</destFile>
							<excludes>
								<!-- <exclude>**/*ITest.java</exclude> <exclude>**/When*.java</exclude> -->
								<exclude>**/*Test.java</exclude>
							</excludes>
							<propertyName>jacoco.it.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<!-- Esta tarea, al igual que la de report, es opcional. Si está presente, 
							JaCoCo generará un informe HTML sobre la cobertura de test integrados. -->
						<id>report-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>
								${project.build.directory}/jacoco-integration.exec
							</dataFile>
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-it
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!--Este plugin ejecuta los test unitarios. Su configuración en el POM 
				es la siguiente: -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<includes>
						<!--<include>**/When*.java</include> -->
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>%regex[.*integrationtest.*]</exclude>
						<!--Aca indico que exluya los que estan en el paquete integrationtest -->
					</excludes>
					<argLine>
						<!-- -XX:MaxPermSize=512m -Xmx256m ${jacoco.argLine} -->
						${jacoco.argLine}
					</argLine>
					<!--Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.15</version>
					</dependency>
				</dependencies>
			</plugin>

			<!--Este plugin se encarga de ejecutar las pruebas integradas. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<includes>
						<!--Indica que se ejecutan solo los que estan en integrationTest -->
						<include>%regex[.*integrationtest.*]</include>
					</includes>
					<argLine>
						-XX:MaxPermSize=512m -Xmx256m ${jacoco.it.argLine}
					</argLine>
					<runOrder>alphabetical</runOrder>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!--################################# JACOCO ######################################## -->

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property name="target.webapp.dir"
											value="${project.build.directory}/${project.build.finalName}" />
										<property name="src.webapp.dir" value="${basedir}/src/main/webapp" />

										<sync verbose="true" todir="${target.webapp.dir}"
											includeEmptyDirs="true">
											<fileset dir="${src.webapp.dir}" />
											<preserveintarget>
												<include name="WEB-INF/lib/**" />
												<include name="WEB-INF/classes/**" />
												<include name="WEB-INF/appengine-generated/**" />
											</preserveintarget>
										</sync>

										<sync verbose="true" todir="${target.webapp.dir}/WEB-INF/classes">
											<fileset
												dir="${project.build.directory}/${project.build.finalName}/WEB-INF/classes" />
										</sync>

									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<!-- This plugin's configuration is used to store Eclipse m2e settings 
							only. It has no influence on the Maven build itself. -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-antrun-plugin</artifactId>
												<versionRange>[1.6,)</versionRange>
												<goals>
													<goal>run</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute>
													<runOnIncremental>true</runOnIncremental>
												</execute>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
